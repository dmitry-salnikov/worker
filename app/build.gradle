apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

def androidSupportVersion = '25.1.0'
def timberVersion = '4.3.1'
def rxRelayVersion = '1.2.0'
def daggerVersion = '2.7';
def butterKnifeVersion = '8.4.0'
def advancedrecyclerviewVersion = "0.9.1"
def eventbusVersion = "3.0.0"
def rxandroidVersion = '1.2.0'
def leakCanaryVersion = '1.4'

def junitVersion = "4.12"
def mockitoVersion = "1.10.19"
def robolectricVersion = "3.0"

Closure<Integer> getVersionCodeFromNumberOfTags = {
    def tags = 'git tag'.execute()
            .getText()
            .readLines()

    return tags.size()
}

Closure<String> getVersionNameFromTag = {
    def tag = 'git describe --tags --abbrev=0'.execute()
            .getText()

    return tag.toString().trim()
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "me.raatiniemi.worker"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode getVersionCodeFromNumberOfTags()
        versionName getVersionNameFromTag()

        jackOptions {
            enabled true
            additionalParameters("jack.incremental" : "true")
        }

        resConfigs "en"
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res-main',
                    'src/main/res-screen/project',
                    'src/main/res-screen/projects',
                    'src/main/res-screen/settings'
            ]
        }
    }

    // AndroidHttpClient was removed from the SDK in v23 of the build tools.
    // This causes issues since robolectric is running against an earlier
    // version of the SDK, and expects the class to be present.
    useLibrary 'org.apache.http.legacy'

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1'
    }
}

Closure<String> combineSourceSetDirectories = { sourceSet ->
    return (sourceSet.java.srcDirs + sourceSet.res.srcDirs).join(',')
}

tasks.sonarqube.dependsOn 'testReleaseUnitTest'

sonarqube {
    // noinspection GroovyAssignabilityCheck
    properties {
        def binaries = "${buildDir}/intermediates/classes/release"
        def androidPath = android.sdkDirectory.getPath()

        // noinspection GroovyAssignabilityCheck
        def libraries = "${buildDir}/intermediates/exploded-aar/**/classes.jar," +
                "${androidPath}/platforms/${android.compileSdkVersion}/android.jar," +
                "${androidPath}/extras/**/*.jar"

        properties["sonar.projectKey"] = "worker:android"
        properties["sonar.projectName"] = "worker"
        properties["sonar.projectVersion"] = "${android.defaultConfig.versionName}"

        properties["sonar.sourceEncoding"] = "UTF-8"
        // noinspection GroovyAssignabilityCheck
        properties["sonar.sources"] = combineSourceSetDirectories android.sourceSets.main
        properties["sonar.binaries"] = binaries
        properties["sonar.libraries"] = libraries
        properties["sonar.java.binaries"] = binaries
        properties["sonar.java.libraries"] = libraries

        properties["sonar.tests"] = "src/test/java"
        properties["sonar.java.test.binaries"] = binaries
        properties["sonar.java.test.libraries"] = libraries

        properties['sonar.java.source'] = "${android.compileOptions.sourceCompatibility}"
        properties['sonar.java.target'] = "${android.compileOptions.targetCompatibility}"

        properties["sonar.scm.provider"] = "git"

        properties["sonar.java.coveragePlugin"] = "jacoco"
        properties["sonar.jacoco.reportPath"] = "${buildDir}/jacoco/testReleaseUnitTest.exec"
        properties["sonar.junit.reportsPath"] = "${buildDir}/test-results/release"
    }
}

jacoco {
    toolVersion = '0.7.8'
}

dependencies {
    provided 'javax.annotation:jsr250-api:1.0'

    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}"

    compile "com.android.support:appcompat-v7:${androidSupportVersion}"
    compile "com.android.support:cardview-v7:${androidSupportVersion}"
    compile "com.android.support:design:${androidSupportVersion}"
    compile "com.android.support:recyclerview-v7:${androidSupportVersion}"
    compile "com.android.support:support-annotations:${androidSupportVersion}"
    compile "com.jakewharton.timber:timber:${timberVersion}"
    compile "com.jakewharton.rxrelay:rxrelay:${rxRelayVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    compile "com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:${advancedrecyclerviewVersion}"
    compile "io.reactivex:rxandroid:${rxandroidVersion}"
    compile "org.greenrobot:eventbus:${eventbusVersion}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"

    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"
}
